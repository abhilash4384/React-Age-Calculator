{"version":3,"sources":["components/headComponent.js","components/formComponent.js","App.js","reportWebVitals.js","index.js"],"names":["HeadComponent","className","color","style","paddingRight","size","FormComponent","useState","formValues","setValue","onChange","fieldName","fieldValue","htmlFor","format","dayPlaceholder","monthPlaceholder","yearPlaceholder","name","val","value","dob","tillDate","disabled","onClick","Swal","fire","title","text","icon","confirmButtonText","dateOfBirth","moment","endDate","years","diff","add","months","days","msg","e","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAYeA,EATO,kBACpB,wBAAQC,UAAU,aAAlB,SACE,gCACE,cAAC,IAAD,CAAYC,MAAM,UAAUC,MAAO,CAAEC,aAAc,QAAUC,KAAM,KACnE,wD,0ECyFSC,EA3FO,WACpB,MAA+BC,mBAAS,MAAxC,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAW,SAACC,EAAWC,GAC3BH,EAAS,2BACJD,GADG,kBAELG,EAAYC,MAsCjB,OACE,sBAAKX,UAAU,iBAAf,UACE,oCACE,uBAAOY,QAAQ,MAAf,2BACA,cAAC,IAAD,CACEC,OAAO,aACPC,eAAe,KACfC,iBAAiB,KACjBC,gBAAgB,OAChBhB,UAAU,sBACViB,KAAK,MACLR,SAAU,SAACS,GAAD,OAAST,EAAS,MAAOS,IACnCC,MAAK,OAAEZ,QAAF,IAAEA,OAAF,EAAEA,EAAYa,SAIvB,0BAASpB,UAAU,QAAnB,UACE,uBAAOY,QAAQ,WAAf,2BACA,cAAC,IAAD,CACEC,OAAO,aACPC,eAAe,KACfC,iBAAiB,KACjBC,gBAAgB,OAChBhB,UAAU,sBACViB,KAAK,WACLR,SAAU,SAACS,GAAD,OAAST,EAAS,WAAYS,IACxCC,MAAK,OAAEZ,QAAF,IAAEA,OAAF,EAAEA,EAAYc,cAIvB,0BAASrB,UAAU,cAAnB,UACE,wBACEA,UAAU,MACVsB,UAAWf,IAAeA,EAAWc,WAAad,EAAWa,IAC7DG,QApEa,WACnB,IACE,GAAIhB,EAAWa,IAAMb,EAAWc,SAO9B,YANAG,IAAKC,KAAK,CACRC,MAAO,gBACPC,KAAM,kDACNC,KAAM,WACNC,kBAAmB,QAKvB,IAAMC,EAAcC,IAAOxB,EAAWa,KAChCY,EAAUD,IAAOxB,EAAWc,UAE5BY,EAAQD,EAAQE,KAAKJ,EAAa,QACxCA,EAAYK,IAAIF,EAAO,SAEvB,IAAMG,EAASJ,EAAQE,KAAKJ,EAAa,UACzCA,EAAYK,IAAIC,EAAQ,UAExB,IAAMC,EAAOL,EAAQE,KAAKJ,EAAa,QACjCQ,EAAG,kBAAcL,EAAd,iBAA4BG,EAA5B,wBAAkDC,EAAlD,eACTb,IAAKC,KAAK,OAAQa,EAAK,WACvB,MAAOC,GACPC,QAAQC,IAAIF,GACZf,IAAKC,KAAK,UAAW,wBAAyB,WAuC5C,2BAQA,wBAAQzB,UAAU,MAAMsB,UAAWf,EAAYgB,QA3CnC,WAChBf,EAAS,OA0CL,0BCvEOkC,MAXf,WACE,OACE,qBAAK1C,UAAU,YAAf,SACE,sBAAKA,UAAU,OAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UCCO2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d09450ed.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Calculator } from \"react-bootstrap-icons\";\r\n\r\nconst HeadComponent = () => (\r\n  <header className=\"app-header\">\r\n    <div>\r\n      <Calculator color=\"#b0182b\" style={{ paddingRight: \"10px\" }} size={22} />\r\n      <span>Age Calculator</span>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nexport default HeadComponent;\r\n","import moment from \"moment\";\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst FormComponent = () => {\r\n  const [formValues, setValue] = useState(null);\r\n\r\n  const onChange = (fieldName, fieldValue) => {\r\n    setValue({\r\n      ...formValues,\r\n      [fieldName]: fieldValue,\r\n    });\r\n  };\r\n\r\n  const calculateAge = () => {\r\n    try {\r\n      if (formValues.dob > formValues.tillDate) {\r\n        Swal.fire({\r\n          title: \"Are you fool?\",\r\n          text: \"Date of Birth should be greater than Till date!\",\r\n          icon: \"question\",\r\n          confirmButtonText: \"No!\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      const dateOfBirth = moment(formValues.dob);\r\n      const endDate = moment(formValues.tillDate);\r\n\r\n      const years = endDate.diff(dateOfBirth, \"year\");\r\n      dateOfBirth.add(years, \"years\");\r\n\r\n      const months = endDate.diff(dateOfBirth, \"months\");\r\n      dateOfBirth.add(months, \"months\");\r\n\r\n      const days = endDate.diff(dateOfBirth, \"days\");\r\n      const msg = `You are ${years} year ${months} month's and ${days} day's old!`;\r\n      Swal.fire(\"Age!\", msg, \"success\");\r\n    } catch (e) {\r\n      console.log(e);\r\n      Swal.fire(\"Oops...\", \"Something went wrong!\", \"error\");\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setValue(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <section>\r\n        <label htmlFor=\"dob\">Date Of Birth</label>\r\n        <DatePicker\r\n          format=\"dd/MM/yyyy\"\r\n          dayPlaceholder=\"DD\"\r\n          monthPlaceholder=\"MM\"\r\n          yearPlaceholder=\"YYYY\"\r\n          className=\"date-picker-wrapper\"\r\n          name=\"dob\"\r\n          onChange={(val) => onChange(\"dob\", val)}\r\n          value={formValues?.dob}\r\n        />\r\n      </section>\r\n\r\n      <section className=\"pt-50\">\r\n        <label htmlFor=\"tillDate\">Age Till Date</label>\r\n        <DatePicker\r\n          format=\"dd/MM/yyyy\"\r\n          dayPlaceholder=\"DD\"\r\n          monthPlaceholder=\"MM\"\r\n          yearPlaceholder=\"YYYY\"\r\n          className=\"date-picker-wrapper\"\r\n          name=\"tillDate\"\r\n          onChange={(val) => onChange(\"tillDate\", val)}\r\n          value={formValues?.tillDate}\r\n        />\r\n      </section>\r\n\r\n      <section className=\"btn-section\">\r\n        <button\r\n          className=\"btn\"\r\n          disabled={!formValues || !formValues.tillDate || !formValues.dob}\r\n          onClick={calculateAge}\r\n        >\r\n          Calculate Age\r\n        </button>\r\n\r\n        <button className=\"btn\" disabled={!formValues} onClick={resetForm}>\r\n          Reset\r\n        </button>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormComponent;\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport HeadComponent from \"components/headComponent\";\nimport FormComponent from \"components/formComponent\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"main\">\n        <HeadComponent />\n        <FormComponent />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}